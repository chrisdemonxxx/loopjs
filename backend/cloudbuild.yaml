steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/loopjs-backend:$COMMIT_SHA'
      - '-t'
      - 'gcr.io/$PROJECT_ID/loopjs-backend:latest'
      - '.'

  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/loopjs-backend:$COMMIT_SHA'

  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/loopjs-backend:latest'

  # Deploy container image to Cloud Run with health checks and zero-downtime deployment
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'loopjs-backend'
      - '--image'
      - 'gcr.io/$PROJECT_ID/loopjs-backend:$COMMIT_SHA'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '3000'
      - '--memory'
      - '1Gi'
      - '--cpu'
      - '1'
      - '--min-instances'
      - '1'
      - '--max-instances'
      - '10'
      - '--no-traffic'
      - '--tag'
      - 'candidate'
      - '--set-env-vars'
      - 'NODE_ENV=production'
      - '--set-secrets'
      - 'MONGO_URI=MONGODB_URI:latest,JWT_SECRET=JWT_SECRET:latest,SESSION_SECRET=SESSION_SECRET:latest'

  # Step 4: Health check and traffic promotion
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Get the candidate revision URL
        CANDIDATE_URL=$$(gcloud run services describe loopjs-backend \
          --region=us-central1 \
          --format="value(status.traffic[].url)" \
          --filter="status.traffic[].tag:candidate")
        
        # If no candidate URL found, get the latest revision URL
        if [ -z "$$CANDIDATE_URL" ]; then
          CANDIDATE_URL=$$(gcloud run services describe loopjs-backend \
            --region=us-central1 \
            --format="value(status.url)")
        fi
        
        echo "Testing candidate revision at: $$CANDIDATE_URL"
        
        # Health check with retry
        for i in {1..5}; do
          if curl -f -s "$$CANDIDATE_URL/health" > /dev/null 2>&1; then
            echo "Health check passed, promoting to production"
            gcloud run services update-traffic loopjs-backend \
              --region=us-central1 \
              --to-latest
            exit 0
          fi
          echo "Health check attempt $$i failed, retrying in 10 seconds..."
          sleep 10
        done
        
        echo "Health check failed, rolling back"
        gcloud run services update-traffic loopjs-backend \
          --region=us-central1 \
          --to-revisions=LATEST=100
        exit 1

images:
  - 'gcr.io/$PROJECT_ID/loopjs-backend:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/loopjs-backend:latest'

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'