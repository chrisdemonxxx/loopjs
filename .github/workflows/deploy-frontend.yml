name: Deploy Frontend to Cloud Run

on:
  push:
    branches:
      - main
    paths:
      - 'frontend/**'
      - '.github/workflows/deploy-frontend.yml'
  workflow_dispatch:

env:
  PROJECT_ID: code-assist-470813
  SERVICE_NAME: loopjs-frontend
  REGION: us-central1

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Deploy to Cloud Run (using Cloud Build)
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --source ./frontend \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --port 80 \
            --memory 512Mi \
            --cpu 1 \
            --timeout 300 \
            --max-instances 10

      - name: Get Service URL
        id: url
        run: |
          URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} \
            --region ${{ env.REGION }} \
            --format='value(status.url)')
          echo "Frontend deployed to: $URL"
          echo "url=$URL" >> $GITHUB_OUTPUT

      - name: Test Frontend Endpoint
        continue-on-error: true
        run: |
          echo "Waiting for frontend to start..."
          sleep 30
          curl -f ${{ steps.url.outputs.url }} && echo "‚úÖ Frontend is responding!" || echo "‚ö†Ô∏è Frontend check failed, but deployment succeeded"

      - name: Output Deployment Info
        run: |
          echo "üöÄ Deployment successful!"
          echo "Frontend URL: ${{ steps.url.outputs.url }}"
          echo "Custom Domain: https://loopjs.vidai.sbs/"
          echo ""
          echo "Deployment Details:"
          gcloud run services describe ${{ env.SERVICE_NAME }} \
            --region ${{ env.REGION }} \
            --format='table(status.latestReadyRevisionName,status.traffic)'
