name: Deploy All Services
# Trigger deployment - testing workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  PROJECT_ID: code-assist-470813
  REGION: us-central1

jobs:
  deploy-backend:
    name: Deploy Backend
    runs-on: ubuntu-latest
    outputs:
      backend_url: ${{ steps.url.outputs.url }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Verify Authentication and Permissions
        run: |
          echo "Checking authentication..."
          gcloud auth list
          echo "Checking project access..."
          gcloud projects describe ${{ env.PROJECT_ID }}
          echo "Checking Cloud Run permissions..."
          gcloud run services list --region ${{ env.REGION }} || echo "No existing services or permission issue"

      - name: Build and Deploy Backend to Cloud Run
        run: |
          echo "Starting backend deployment..."
          echo "Project ID: ${{ env.PROJECT_ID }}"
          echo "Region: ${{ env.REGION }}"
          echo "Commit SHA: ${{ github.sha }}"
          echo "Build timestamp: $(date -u +"%Y-%m-%dT%H:%M:%SZ")"
          
          cd backend
          # Submit build using cloudbuild.yaml configuration
          gcloud builds submit --config cloudbuild.yaml
          
          # Wait for build to complete
          echo "Waiting for build to complete..."
          sleep 30
          
          # Deploy to Cloud Run
          gcloud run deploy loopjs-backend \
            --image gcr.io/${{ env.PROJECT_ID }}/loopjs-backend \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --memory 512Mi \
            --cpu 1 \
            --max-instances 10 \
            --timeout 300 \
            --tag commit-${{ github.sha }} \
            --set-env-vars="NODE_ENV=production,JWT_ACCESS_TOKEN_EXPIRATION=1h,JWT_REFRESH_TOKEN_EXPIRATION=7d"

      - name: Get Backend URL
        id: url
        run: |
          URL=$(gcloud run services describe loopjs-backend \
            --region ${{ env.REGION }} \
            --format='value(status.url)')
          echo "Backend deployed to: $URL"
          echo "url=$URL" >> $GITHUB_OUTPUT

      - name: Test Backend Health
        continue-on-error: true
        run: |
          echo "Waiting for backend to start..."
          sleep 30
          curl -f ${{ steps.url.outputs.url }}/health && echo "✅ Backend health check passed!" || echo "⚠️ Health check failed, but deployment succeeded"

  deploy-frontend:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    needs: deploy-backend
    outputs:
      frontend_url: ${{ steps.url.outputs.url }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Build and Deploy Frontend to Cloud Run
        run: |
          echo "Starting frontend deployment..."
          echo "Project ID: ${{ env.PROJECT_ID }}"
          echo "Region: ${{ env.REGION }}"
          echo "Commit SHA: ${{ github.sha }}"
          echo "Build timestamp: $(date -u +"%Y-%m-%dT%H:%M:%SZ")"
          
          cd frontend
          # Submit build with no-cache
          gcloud builds submit --config cloudbuild.yaml --substitutions=COMMIT_SHA=${{ github.sha }},BUILD_ID=$(date +%s)
          
          echo "Waiting for build to complete..."
          sleep 30
          
          # Deploy with tag to force new revision
          gcloud run deploy loopjs-frontend \
            --image gcr.io/${{ env.PROJECT_ID }}/loopjs-frontend:latest \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --memory 512Mi \
            --cpu 1 \
            --max-instances 10 \
            --timeout 300 \
            --port 8080 \
            --tag commit-${{ github.sha }} \
            --no-traffic  # Deploy without traffic first
          
          # Route all traffic to new revision
          gcloud run services update-traffic loopjs-frontend \
            --region ${{ env.REGION }} \
            --to-latest

      - name: Get Frontend URL
        id: url
        run: |
          URL=$(gcloud run services describe loopjs-frontend \
            --region ${{ env.REGION }} \
            --format='value(status.url)')
          echo "Frontend deployed to: $URL"
          echo "url=$URL" >> $GITHUB_OUTPUT

      - name: Test Frontend
        continue-on-error: true
        run: |
          echo "Waiting for frontend to start..."
          sleep 30
          curl -f ${{ steps.url.outputs.url }} && echo "✅ Frontend is responding!" || echo "⚠️ Frontend check failed, but deployment succeeded"

      - name: Deployment Summary
        run: |
          echo "🚀 Deployment Complete!"
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo "Backend URL:  ${{ needs.deploy-backend.outputs.backend_url }}"
          echo "Frontend URL: ${{ steps.url.outputs.url }}"
          echo ""
          echo "Public URLs:"
          echo "🌐 Frontend:  https://loopjs.vidai.sbs/"
          echo "🔧 Backend:   ${{ needs.deploy-backend.outputs.backend_url }}"
          echo "🔌 WebSocket: wss://$(echo ${{ needs.deploy-backend.outputs.backend_url }} | sed 's|https://||')/ws"
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
